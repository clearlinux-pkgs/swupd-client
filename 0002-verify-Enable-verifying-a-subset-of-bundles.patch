From 196408419134e64abfab8fba008f2c1d90d5acac Mon Sep 17 00:00:00 2001
From: William Douglas <william.douglas@intel.com>
Date: Thu, 10 Jan 2019 14:05:56 -0800
Subject: [PATCH] verify: Enable verifying a subset of bundles

Allow users to verify only a given subset of bundles rather than the
entire system. This also enables an alternative "installation" with a
verify --fix --bundles $foo where foo doesn't include os-core which is
useful for installing 3rd party content that lives outside of /usr.
---
 Makefile.am                               |   1 +
 docs/swupd.1                              |  19 ++++
 src/verify.c                              |  26 +++++-
 test/functional/verify/verify-bundle.bats | 108 ++++++++++++++++++++++
 5 files changed, 164 insertions(+), 1 deletion(-)
 create mode 100755 test/functional/verify/verify-bundle.bats

diff --git a/Makefile.am b/Makefile.am
index a997efa..207c802 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -232,6 +232,7 @@ BATS = \
 	test/functional/verify/verify-boot-file.bats \
 	test/functional/verify/verify-boot-file-deleted.bats \
 	test/functional/verify/verify-boot-skip.bats \
+	test/functional/verify/verify-bundle.bats \
 	test/functional/verify/verify-client-certificate.bats \
 	test/functional/verify/verify-directory-tree-deleted.bats \
 	test/functional/verify/verify-empty-dir-deleted.bats \
diff --git a/docs/swupd.1 b/docs/swupd.1
index 5cbb3a5..1572913 100644
--- a/docs/swupd.1
+++ b/docs/swupd.1
@@ -554,6 +554,25 @@ and directories and/or symlinks.
 Attempt to proceed even if non\-critical errors found.
 .UNINDENT
 .UNINDENT
+.IP \(bu 2
+\fI\-B, \-\-bundles=[BUNDLES]\fP
+.INDENT 2.0
+.INDENT 3.5
+Only verify the (comma separated) list of bundles are installed
+correctly.
+.sp
+Examples:
+.INDENT 0.0
+.IP \(bu 2
+\fB\-\-bundles os\-core,vi\fP
+.INDENT 2.0
+.INDENT 3.5
+Only runs the verify operation on the os\-core and vi bundles.
+.UNINDENT
+.UNINDENT
+.UNINDENT
+.UNINDENT
+.UNINDENT
 .UNINDENT
 .UNINDENT
 .UNINDENT
diff --git a/src/verify.c b/src/verify.c
index 7a92602..8b8aed0 100644
--- a/src/verify.c
+++ b/src/verify.c
@@ -45,6 +45,7 @@ static const char *cmdline_option_picky_tree = "/usr";
 static const char *cmdline_option_picky_whitelist = picky_whitelist_default;
 static bool cmdline_option_install = false;
 static bool cmdline_option_quick = false;
+static struct list *cmdline_bundles = NULL;
 
 /* picky_whitelist points to picky_whitelist_buffer if and only if regcomp() was called for it */
 static regex_t *picky_whitelist;
@@ -64,6 +65,7 @@ static const struct option prog_opts[] = {
 	{ "picky-tree", required_argument, 0, 'X' },
 	{ "picky-whitelist", required_argument, 0, 'w' },
 	{ "quick", no_argument, 0, 'q' },
+	{ "bundles", required_argument, 0, 'B' },
 };
 
 static void print_help(void)
@@ -83,6 +85,7 @@ static void print_help(void)
 	fprintf(stderr, "   -w, --picky-whitelist=[RE] Any path completely matching the POSIX extended regular expression is ignored by --picky. Matched directories get skipped. Example: /var|/etc/machine-id. Default: %s\n", picky_whitelist_default);
 	fprintf(stderr, "   -i, --install           Similar to \"--fix\" but optimized for install all files to empty directory\n");
 	fprintf(stderr, "   -q, --quick             Don't compare hashes, only fix missing files\n");
+	fprintf(stderr, "   -B, --bundles=[BUNDLES] Ensure BUNDLES are installed correctly. Example: --bundles=os-core,vi\n");
 	fprintf(stderr, "\n");
 }
 
@@ -557,6 +560,20 @@ static bool parse_opt(int opt, char *optarg)
 		}
 		cmdline_option_picky_whitelist = optarg;
 		return true;
+	case 'B': {
+		char *arg_copy = strdup_or_die(optarg);
+		char *token = strtok(arg_copy, ",");
+		while (token) {
+			cmdline_bundles = list_prepend_data(cmdline_bundles, strdup_or_die(token));
+			token = strtok(NULL, ",");
+		}
+		free(arg_copy);
+		if (!cmdline_bundles) {
+			fprintf(stderr, "Missing --bundle argument\n\n");
+			return false;
+		}
+		return true;
+	}
 	default:
 		return false;
 	}
@@ -661,7 +678,14 @@ int verify_main(int argc, char **argv)
 
 	fprintf(stderr, "Verifying version %i\n", version);
 
-	read_subscriptions(&subs);
+	if (cmdline_bundles) {
+		while (cmdline_bundles) {
+			create_and_append_subscription(&subs, cmdline_bundles->data);
+			cmdline_bundles = list_free_item(cmdline_bundles, free);
+		}
+	} else {
+		read_subscriptions(&subs);
+	}
 
 	/*
 	 * FIXME: We need a command line option to override this in case the
diff --git a/test/functional/verify/verify-bundle.bats b/test/functional/verify/verify-bundle.bats
new file mode 100755
index 0000000..33168a7
--- /dev/null
+++ b/test/functional/verify/verify-bundle.bats
@@ -0,0 +1,108 @@
+#!/usr/bin/env bats
+
+# Author: William Douglas
+# Email: william.douglas@intel.com
+
+load "../testlib"
+
+test_setup() {
+
+	create_test_environment "$TEST_NAME"
+	create_bundle -L -n test-bundle1 -f /foo/test-file1 "$TEST_NAME"
+	create_bundle -L -n test-bundle2 -f /bar/test-file2 "$TEST_NAME"
+        sudo rm -f "$TARGETDIR"/foo/test-file1
+        sudo rm -f "$TARGETDIR"/bar/test-file2
+
+}
+
+@test "VER045: Verify bundle ignores not specified missing bundle" {
+
+	run sudo sh -c "$SWUPD verify --fix $SWUPD_OPTS --bundles test-bundle2"
+	assert_status_is 0
+	expected_output=$(cat <<-EOM
+		Verifying version 10
+		Verifying files
+		Starting download of remaining update content. This may take a while...
+		Finishing download of update content...
+		Adding any missing files
+		Missing file: .*/target-dir/bar/test-file2
+		.fixed
+		Fixing modified files
+		Inspected 3 files
+		  1 file was missing
+		    1 of 1 missing files were replaced
+		    0 of 1 missing files were not replaced
+		Calling post-update helper scripts.
+		Fix successful
+	EOM
+	)
+	assert_regex_is_output "$expected_output"
+	assert_file_exists "$TARGETDIR"/core
+	assert_file_not_exists "$TARGETDIR"/foo/test-file1
+	assert_file_exists "$TARGETDIR"/bar/test-file2
+
+}
+
+@test "VER046: Verify bundle installs bundle if not installed" {
+
+	create_bundle -n test-bundle3 -f /baz/test-file3 "$TEST_NAME"
+	run sudo sh -c "$SWUPD verify --fix $SWUPD_OPTS --bundles test-bundle3"
+	assert_status_is 0
+	expected_output=$(cat <<-EOM
+		Verifying version 10
+		Verifying files
+		Starting download of remaining update content. This may take a while...
+		Finishing download of update content...
+		Adding any missing files
+		Missing file: .*/target-dir/baz
+		.fixed
+		Missing file: .*/target-dir/baz/test-file3
+		.fixed
+		Missing file: .*/target-dir/usr/share/clear/bundles/test-bundle3
+		.fixed
+		Fixing modified files
+		Inspected 3 files
+		  3 files were missing
+		    3 of 3 missing files were replaced
+		    0 of 3 missing files were not replaced
+		Calling post-update helper scripts.
+		Fix successful
+	EOM
+	)
+	assert_regex_is_output "$expected_output"
+	assert_file_exists "$TARGETDIR"/core
+	assert_file_not_exists "$TARGETDIR"/foo/test-file1
+	assert_file_not_exists "$TARGETDIR"/bar/test-file2
+	assert_file_exists "$TARGETDIR"/baz/test-file3
+
+}
+
+@test "VER047: Verify bundle installs multiple bundles if not installed" {
+
+	run sudo sh -c "$SWUPD verify --fix $SWUPD_OPTS --bundles test-bundle1,test-bundle2"
+	assert_status_is 0
+	expected_output=$(cat <<-EOM
+		Verifying version 10
+		Verifying files
+		Starting download of remaining update content. This may take a while...
+		Finishing download of update content...
+		Adding any missing files
+		Missing file: .*/target-dir/bar/test-file2
+		.fixed
+		Missing file: .*/target-dir/foo/test-file1
+		.fixed
+		Fixing modified files
+		Inspected 6 files
+		  2 files were missing
+		    2 of 2 missing files were replaced
+		    0 of 2 missing files were not replaced
+		Calling post-update helper scripts.
+		Fix successful
+	EOM
+	)
+	assert_regex_is_output "$expected_output"
+	assert_file_exists "$TARGETDIR"/core
+	assert_file_exists "$TARGETDIR"/foo/test-file1
+	assert_file_exists "$TARGETDIR"/bar/test-file2
+
+}
-- 
2.20.0

