diff --git a/include/swupd.h b/include/swupd.h
index 9bc8028..b4238e6 100644
--- a/include/swupd.h
+++ b/include/swupd.h
@@ -162,7 +162,7 @@ extern void apply_heuristics(struct file *file);
 extern int file_sort_filename(const void *a, const void *b);
 extern int file_sort_filename_reverse(const void *a, const void *b);
 extern struct manifest *load_mom(int version);
-extern struct manifest *load_manifest(int current, int version, struct file *file, struct manifest *mom);
+extern struct manifest *load_manifest(int current, int version, struct file *file, struct manifest *mom, int header_only);
 extern struct list *create_update_list(struct manifest *current, struct manifest *server);
 extern void link_manifests(struct manifest *m1, struct manifest *m2);
 extern void link_submanifests(struct manifest *m1, struct manifest *m2);
diff --git a/src/bundle.c b/src/bundle.c
index d8e3466..092db13 100644
--- a/src/bundle.c
+++ b/src/bundle.c
@@ -364,7 +364,7 @@ int add_subscriptions(struct list *bundles, int current_version, struct manifest
 
 
 	retry_manifest_download:
-		manifest = load_manifest(current_version, file->last_change, file, mom);
+		manifest = load_manifest(current_version, file->last_change, file, mom, 1);
 		if (!manifest) {
 			if (retries < MAX_TRIES) {
 				increment_retries(&retries, &timeout);
diff --git a/src/manifest.c b/src/manifest.c
index 2b4efa3..7f53e09 100644
--- a/src/manifest.c
+++ b/src/manifest.c
@@ -162,7 +162,7 @@ static struct manifest *alloc_manifest(int version, char *component)
 	return manifest;
 }
 
-static struct manifest *manifest_from_file(int version, char *component)
+static struct manifest *manifest_from_file(int version, char *component, int header_only)
 {
 	FILE *infile;
 	char line[MANIFEST_LINE_MAXLEN], *c, *c2;
@@ -177,7 +177,7 @@ static struct manifest *manifest_from_file(int version, char *component)
 
 	string_or_die(&filename, "%s/%i/Manifest.%s", state_dir, version, component);
 
-	infile = fopen(filename, "rb");
+	infile = fopen(filename, "rbm");
 	if (infile == NULL) {
 		free(filename);
 		return NULL;
@@ -249,6 +249,11 @@ static struct manifest *manifest_from_file(int version, char *component)
 	manifest->contentsize = contentsize;
 	manifest->manifest_version = manifest_enc_version;
 	manifest->includes = includes;
+	
+	if (header_only) {
+		fclose(infile);
+		return manifest;
+	}
 
 	/* empty line */
 	while (!feof(infile)) {
@@ -594,7 +599,7 @@ struct manifest *load_mom(int version)
 	free(filename);
 	free(url);
 
-	manifest = manifest_from_file(version, "MoM");
+	manifest = manifest_from_file(version, "MoM", 0);
 
 	if (manifest == NULL) {
 		printf("Failed to load %d MoM manifest\n", version);
@@ -621,7 +626,7 @@ out:
  * Note that if the manifest fails to download, or if the manifest fails to be
  * loaded into memory, this function will return NULL.
  */
-struct manifest *load_manifest(int current, int version, struct file *file, struct manifest *mom)
+struct manifest *load_manifest(int current, int version, struct file *file, struct manifest *mom, int header_only)
 {
 	struct manifest *manifest = NULL;
 	int ret = 0;
@@ -632,12 +637,13 @@ struct manifest *load_manifest(int current, int version, struct file *file, stru
 		return NULL;
 	}
 
-	ret = verify_bundle_hash(mom, file);
+	if (!header_only)
+		ret = verify_bundle_hash(mom, file);
 	if (ret != 0) {
 		return NULL;
 	}
 
-	manifest = manifest_from_file(version, file->filename);
+	manifest = manifest_from_file(version, file->filename, header_only);
 
 	if (manifest == NULL) {
 		printf("Failed to load %d %s manifest\n", version, file->filename);
@@ -838,7 +844,7 @@ struct list *recurse_manifest(struct manifest *manifest, const char *component)
 			version1 = version2;
 		}
 
-		sub = load_manifest(version1, version2, file, manifest);
+		sub = load_manifest(version1, version2, file, manifest, 0);
 		if (!sub) {
 			list_free_list_and_data(bundles, free_manifest_data);
 			return NULL;
diff --git a/src/search.c b/src/search.c
index 9ab53cc..95155e4 100644
--- a/src/search.c
+++ b/src/search.c
@@ -276,7 +276,7 @@ static void do_search(struct manifest *MoM, char search_type, char *search_term)
 		done_with_bundle = false;
 
 		/* Load sub-manifest */
-		subman = load_manifest(file->last_change, file->last_change, file, MoM);
+		subman = load_manifest(file->last_change, file->last_change, file, MoM, 0);
 		if (!subman) {
 			printf("Failed to load manifest %s\n", file->filename);
 			continue;
@@ -443,7 +443,7 @@ static int download_manifests(struct manifest **MoM)
 			/* Do download */
 			printf(" '%s' manifest...\n", file->filename);
 
-			subMan = load_manifest(current_version, file->last_change, file, *MoM);
+			subMan = load_manifest(current_version, file->last_change, file, *MoM, 0);
 			if (!subMan) {
 				printf("Cannot load official manifest MoM for version %i\n", current_version);
 			} else {
