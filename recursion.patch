don't do insane recursions

diff --git a/include/swupd.h b/include/swupd.h
index bdca0d3..9bc8028 100644
--- a/include/swupd.h
+++ b/include/swupd.h
@@ -308,7 +308,7 @@ extern bool is_tracked_bundle(const char *bundle_name);
 extern int remove_bundle(const char *bundle_name);
 extern int list_installable_bundles();
 extern int install_bundles_frontend(char **bundles);
-extern int add_subscriptions(struct list *bundles, int current_version, struct manifest *mom);
+extern int add_subscriptions(struct list *bundles, int current_version, struct manifest *mom, int recursion);
 
 /* some disk sizes constants for the various features:
  *   ...consider adding build automation to catch at build time
diff --git a/src/bundle.c b/src/bundle.c
index 2846cdf..d8e3466 100644
--- a/src/bundle.c
+++ b/src/bundle.c
@@ -326,7 +326,7 @@ out_free_curl:
 }
 
 /* tristate return, -1 for errors, 1 for no errors but no new subscriptions, 0 for no errors and new subscriptions */
-int add_subscriptions(struct list *bundles, int current_version, struct manifest *mom)
+int add_subscriptions(struct list *bundles, int current_version, struct manifest *mom, int recursion)
 {
 	bool new_bundles = false;
 	char *bundle;
@@ -350,6 +350,19 @@ int add_subscriptions(struct list *bundles, int current_version, struct manifest
 			continue;
 		}
 
+		/*
+		 * If we're recursing a tree of includes, we need to cut out early
+		 * if the bundle we're looking at is already subscribed...
+		 * Because if it is, we'll visit it soon anyway at the top level.
+		 *
+		 * We can't do this for the toplevel of the recursion because
+		 * that is how we initiallly fill in the include tree.
+		 */
+		if (component_subscribed(bundle) && recursion > 0) {
+			continue;
+		}
+
+
 	retry_manifest_download:
 		manifest = load_manifest(current_version, file->last_change, file, mom);
 		if (!manifest) {
@@ -363,7 +376,7 @@ int add_subscriptions(struct list *bundles, int current_version, struct manifest
 		}
 
 		if (manifest->includes) {
-			ret = add_subscriptions(manifest->includes, current_version, mom);
+			ret = add_subscriptions(manifest->includes, current_version, mom, recursion + 1);
 			if (ret == -1) {
 				free_manifest(manifest);
 				goto out;
@@ -402,7 +415,7 @@ static int install_bundles(struct list *bundles, int current_version, struct man
 	struct list *to_install_files = NULL;
 
 	/* step 1: check bundle args are valid if so populate subs struct */
-	ret = add_subscriptions(bundles, current_version, mom);
+	ret = add_subscriptions(bundles, current_version, mom, 0);
 
 	if (ret) {
 		if (ret == 1) {
diff --git a/src/update.c b/src/update.c
index bb83ede..63fecef 100644
--- a/src/update.c
+++ b/src/update.c
@@ -204,7 +204,7 @@ int add_included_manifests(struct manifest *mom)
 		iter = iter->next;
 	}
 
-	if (add_subscriptions(subbed, mom->version, mom) >= 0) {
+	if (add_subscriptions(subbed, mom->version, mom, 0) >= 0) {
 		ret = 0;
 	} else {
 		ret = -1;
