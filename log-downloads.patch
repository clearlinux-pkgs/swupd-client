diff -purN swupd-client-5.0.5/src/cmds/update.c swupd-client-5.0.5.org/src/cmds/update.c
--- swupd-client-5.0.5/src/cmds/update.c	2023-03-07 20:04:51.000000000 +0000
+++ swupd-client-5.0.5.org/src/cmds/update.c	2023-05-02 22:12:23.872372968 +0000
@@ -562,6 +562,8 @@ static const struct option prog_opts[] =
 #endif
 };
 
+extern int trace_curl;
+
 static void print_help(void)
 {
 	print("Performs a system software update\n\n");
@@ -606,6 +608,9 @@ static bool parse_opt(int opt, char *opt
 	case 'k':
 		keepcache = optarg_to_bool(optarg);
 		return true;
+	case 't':
+		trace_curl = 1;
+		return true;
 	case FLAG_DOWNLOAD_ONLY:
 		download_only = optarg_to_bool(optarg);
 		return true;
diff -purN swupd-client-5.0.5/src/swupd_lib/curl.c swupd-client-5.0.5.org/src/swupd_lib/curl.c
--- swupd-client-5.0.5/src/swupd_lib/curl.c	2023-04-25 20:36:49.000000000 +0000
+++ swupd-client-5.0.5.org/src/swupd_lib/curl.c	2023-05-02 22:16:07.503908180 +0000
@@ -53,6 +53,8 @@ static CURL *curl_main = NULL;
 
 uint64_t total_curl_sz = 0;
 
+int trace_curl = 0;
+
 /* alternative CA Path */
 static char *capath = NULL;
 
@@ -519,9 +521,12 @@ static enum download_status swupd_curl_g
 	enum download_status status;
 	struct curl_file local = { 0 };
 	void *local_ptr = &local;
+	struct timeval before, after;
+	double delta;
 
 restart_download:
 	curl_easy_reset(curl_main);
+	gettimeofday(&before, NULL);
 
 	if (!in_memory_file) {
 		// normal file download
@@ -580,6 +585,15 @@ exit:
 		curl_ret = swupd_download_file_close(curl_ret, &local);
 	}
 
+	gettimeofday(&after, NULL);
+	delta = (1000000.0 * (after.tv_sec - before.tv_sec) + (after.tv_usec - before.tv_usec) )/1000000.0;
+
+	if (trace_curl) {
+		curl_off_t dlsize;
+		curl_easy_getinfo(curl_main, CURLINFO_SIZE_DOWNLOAD_T, &dlsize);
+		fprintf(stderr, "Downloaded %li Kb in %5.1f seconds: %s\n", dlsize / 1024, delta, url);
+	}
+
 	status = process_curl_error_codes(curl_ret, curl_main);
 	debug("Curl - Complete sync download: %s -> %s, status=%d\n", url, in_memory_file ? "<memory>" : filename, status);
 	if (status == DOWNLOAD_STATUS_RANGE_ERROR) {
